<configuration>
	<!-- Configuration for Umbraco 8 specific implementations -->
	<components>
    <component
	    id="ConnectionStringLocator"
	    service="UCommerce.Infrastructure.Configuration.IConnectionStringLocator, UCommerce.Infrastructure"
	    type="UCommerce.Umbraco8.Configuration.ConnectionStringLocator, UCommerce.Umbraco8">
      <parameters>
        <connectionString>#{connectionString}</connectionString>
      </parameters>
    </component>
    
    <component
	    id="InstallationConnectionStringLocator"
	    service="UCommerce.Installer.IInstallationConnectionStringLocator, UCommerce.Installer"
	    type="UCommerce.Umbraco8.Installer.UmbracoInstallationConnectionStringLocator, UCommerce.Umbraco8.Installer">
    </component>

      <!-- Services -->
		<component id="AuthenticationService"
				service="UCommerce.Security.IAuthenticationService, UCommerce"
				type="UCommerce.Umbraco8.Security.AuthenticationService, UCommerce.Umbraco8" />

		<component id="BackendLocalizationService"
				service="UCommerce.Presentation.Web.Pages.IBackendLocalizationService, UCommerce.Presentation"
				type="UCommerce.Umbraco8.Web.BackendLocalizationService, UCommerce.Umbraco8" />

		<component id="DomainService"
				service="UCommerce.Content.IDomainService, UCommerce"
				type="UCommerce.Umbraco8.Content.DomainService, UCommerce.Umbraco8" />

		<component id="ImageService"
				service="UCommerce.Content.IImageService, UCommerce"
				type="UCommerce.Umbraco8.Content.ImageService, UCommerce.Umbraco8" />

		<component id="ContentService"
				service="UCommerce.Content.IContentService, UCommerce"
				type="UCommerce.Umbraco8.Content.ContentService, UCommerce.Umbraco8" />

		<component id="LoggingService"
				service="UCommerce.Infrastructure.Logging.ILoggingService, UCommerce.Infrastructure"
				type="UCommerce.Umbraco8.Logging.LoggingService, UCommerce.Umbraco8" />

		<component id="MemberService"
				service="UCommerce.Security.IMemberService, UCommerce"
				type="UCommerce.Umbraco8.Security.MemberService, UCommerce.Umbraco8" />

		<component id="UserGroupService"
				   service="UCommerce.Security.IUserGroupService, UCommerce"
				   type="UCommerce.Umbraco8.Security.UserGroupService, UCommerce.Umbraco8" />

		<component id="CurrentUserNameService"
				   service="UCommerce.Security.ICurrentUserNameService, UCommerce"
				   type="UCommerce.Umbraco8.Security.CurrentUserNameService, UCommerce.Umbraco8" />

		<component id="UserService"
				   service="UCommerce.Security.IUserService, UCommerce"
				   type="UCommerce.Umbraco8.Security.UserService, UCommerce.Umbraco8" >
			<parameters>
				<userGroupService>${UserGroupService}</userGroupService>
			</parameters>
		</component>

		<component id="LanguageService"
				service="UCommerce.Infrastructure.Globalization.ILanguageService, UCommerce.Infrastructure"
				type="UCommerce.Umbraco8.Globalization.UmbracoLanguageService, UCommerce.Umbraco8" />

		<component id="UrlResolver"
				service="UCommerce.Presentation.Web.IUrlResolver, UCommerce.Presentation"
				type="UCommerce.Umbraco8.Web.WebPath, UCommerce.Umbraco8" />

		<!-- Content Tree services -->
		<component
				id="MediaControlFactory"
				service="UCommerce.Presentation.Web.Controls.IControlFactory, UCommerce.Presentation"
				type="UCommerce.Presentation.Web.Controls.Factories.ImagePickerControlFactory, UCommerce.Presentation"/>

		<component
				id="ContentControlFactory"
				service="UCommerce.Presentation.Web.Controls.IControlFactory, UCommerce.Presentation"
				type="UCommerce.Presentation.Web.Controls.Factories.ContentPickerControlFactory, UCommerce.Presentation"/>

		<component
				id="ImagePickerControlAdapter"
				service="UCommerce.Presentation.Web.Controls.IControlAdapter, UCommerce.Presentation"
				type="UCommerce.Presentation.Web.Controls.Adapters.ImagePickerControlAdapter, UCommerce.Presentation" />

		<component
				id="ContentPickerControlAdapter"
				service="UCommerce.Presentation.Web.Controls.IControlAdapter, UCommerce.Presentation"
				type="UCommerce.Presentation.Web.Controls.Adapters.ContentPickerControlAdapter, UCommerce.Presentation" />

		<component
				id="CheckBoxControlFactory"
				service="UCommerce.Presentation.Web.Controls.IControlFactory, UCommerce.Presentation"
				type="UCommerce.Umbraco8.Web.Controls.CheckBoxControlFactory, UCommerce.Umbraco8" />
		
		<component 
      id="ContentNodeService" 
      service="UCommerce.Web.ITreeNodeService, UCommerce" 
      type="UCommerce.Web.Impl.ContentNodeService, UCommerce">
			<parameters>
				<serviceType>Content</serviceType>
				<treeNodeContentToTreeNodeConverter>${TreeServiceContentNodeConverter}</treeNodeContentToTreeNodeConverter>
				<treeContentService>${TreeServiceContentPicker}</treeContentService>
			</parameters>
		</component>

		<component 
      id="ImageNodeService" 
      service="UCommerce.Web.ITreeNodeService, UCommerce" 
      type="UCommerce.Web.Impl.ContentNodeService, UCommerce">
			<parameters>
				<serviceType>Image</serviceType>
				<treeNodeContentToTreeNodeConverter>${TreeServiceImageNodeConverter}</treeNodeContentToTreeNodeConverter>
				<treeContentService>${TreeServiceImagePicker}</treeContentService>
			</parameters>
		</component>

		<!-- tree service -->
		<component id="TreeServiceContentPicker"
				service="UCommerce.Tree.ITreeContentService, UCommerce"
				type="UCommerce.Umbraco8.Content.ContentTreeService, UCommerce.Umbraco8" />

		<component id="TreeServiceImagePicker"
		  service="UCommerce.Tree.ITreeContentService, UCommerce"
		  type="UCommerce.Umbraco8.Content.ImageTreeService, UCommerce.Umbraco8" />

		<component id="TreeServiceContentNodeConverter"
		  service="UCommerce.Web.ITreeNodeContentToTreeNodeConverter, UCommerce"
		  type="UCommerce.Umbraco8.Content.ContentNodeConverter, UCommerce.Umbraco8" />

		<component id="TreeServiceImageNodeConverter"
		  service="UCommerce.Web.ITreeNodeContentToTreeNodeConverter, UCommerce"
		  type="UCommerce.Umbraco8.Content.ImageNodeConverter, UCommerce.Umbraco8" />

		<component id="ResourcesIncludeShellList"
				   service="UCommerce.Presentation.UI.Resources.IResourcesIncludeList, UCommerce.Presentation"
				   type="UCommerce.Umbraco8.UI.Resources.ResourcesIncludeListShell, UCommerce.Umbraco8" />
		
		<component id="controls.shell"
				   service="UCommerce.Presentation.UI.Resources.IResourcesControls, UCommerce.Presentation"
				   type="UCommerce.Presentation.UI.Resources.Impl.ResourcesControls, UCommerce.Presentation" >
			<parameters>
				<resouresIncludeLists>
					<array>
						<item>${ResourcesIncludeShellList}</item>
					</array>
				</resouresIncludeLists>
			</parameters>
		</component>

		<!-- Factories -->
		<component id="JavaScriptFactory"
				service="UCommerce.Presentation.UI.IJavaScriptFactory, UCommerce.Presentation"
				type="UCommerce.Umbraco8.UI.JavaScriptFactory, UCommerce.Umbraco8" />

		<!-- Resources -->
		<component id="ResourcesDependencyLoader"
		  service="ClientDependency.Core.Controls.ClientDependencyLoader, ClientDependency.Core"
		  type="UCommerce.Umbraco8.UI.Resources.ResourcesDependencyLoader, UCommerce.Umbraco8" />


		<component id="JavascriptResourcesIncludeList"
				   service="UCommerce.Presentation.UI.Resources.IResourcesIncludeList, UCommerce.Presentation"
				   type="UCommerce.Presentation.UI.Resources.Impl.JavascriptResourceIncludeList, UCommerce.Presentation" />

		<component id="ResourcesIncludeList"
				   service="UCommerce.Presentation.UI.Resources.IResourcesIncludeList, UCommerce.Presentation"
				   type="UCommerce.Umbraco8.UI.Resources.ResourcesIncludeList, UCommerce.Umbraco8" />

		<component id="ApplicationBootStrapper"
				service="UCommerce.Presentation.UI.Resources.IResourcesIncludeList, UCommerce.Presentation"
				type="UCommerce.Presentation.UI.Resources.Impl.ApplicationBootStrapper, UCommerce.Presentation" />

		<component id="WidgetResourcesIncludeList"
		service="UCommerce.Presentation.UI.Resources.IResourcesIncludeList, UCommerce.Presentation"
		type="UCommerce.Presentation.UI.Resources.Impl.WidgetResourcesIncludeList, UCommerce.Presentation" />

			<component id="controls.ucommerceMain"
				service="UCommerce.Presentation.UI.Resources.IResourcesControls, UCommerce.Presentation"
				type="UCommerce.Presentation.UI.Resources.Impl.ResourcesControls, UCommerce.Presentation" >
			<parameters>
				<resouresIncludeLists>
					<array>
						<item>${JavascriptResourcesIncludeList}</item>
						<item>${ResourcesIncludeList}</item>
						<item>${WidgetResourcesIncludeList}</item>
						<item>${ApplicationBootStrapper}</item>
					</array>
				</resouresIncludeLists>
			</parameters>
		</component>

		<component id="MediaPicker"
				   service="UCommerce.Tree.ITreeContentService, UCommerce"
				   type="UCommerce.Umbraco8.Content.ImageTreeService, UCommerce.Umbraco8" />

	  <!-- GetHostSystemInfo-->
	  <component
	    id="GetHostSystemInfo"
	    service="UCommerce.SystemInformation.IGetHostSystemInfo, UCommerce"
	    type="UCommerce.Umbraco8.SystemInformation.GetHostSystemInfo, UCommerce.Umbraco8"/>

    <component
      id="SectionGroupFactory"
      service="UCommerce.Presentation.Web.Pages.ISectionGroupFactory, UCommerce.Presentation"
      type="UCommerce.Umbraco8.Web.SectionGroupFactory, UCommerce.Umbraco8" />

  </components>
</configuration>