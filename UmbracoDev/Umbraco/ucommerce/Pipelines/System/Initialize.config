<configuration>
  <components>

    <component id="Initialize"
               service="UCommerce.Pipelines.IPipeline`1[[UCommerce.Pipelines.Initialization.InitializeArgs, UCommerce.Pipelines]], UCommerce"
               type="UCommerce.Pipelines.Initialization.InitializePipeline, UCommerce.Pipelines">
      <parameters>
        <tasks>
          <array>
            <value>${Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask.Async}</value>
            <value>${Initialize.ReinitializeWebApiControllerCacheTask}</value>
          </array>
        </tasks>
      </parameters>
    </component>

    <component
      id="Initialize.ReinitializeWebApiControllerCacheTask"
      service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Pipelines.Initialization.InitializeArgs, UCommerce.Pipelines]], UCommerce"
      type="UCommerce.SystemHttp.Pipelines.Initialize.ReinitializeWebApiControllerCache, UCommerce.SystemHttp"
    />

    <component
      id="Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask"
      service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Pipelines.Initialization.InitializeArgs, UCommerce.Pipelines]], UCommerce"
      type="UCommerce.Pipelines.Initialization.ExecuteUpdateCurrencyExchangeRatesPipelineTask, UCommerce.Pipelines"
    />

    <component
      id="Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask.Async"
      service="UCommerce.Pipelines.IPipelineTask`1[[UCommerce.Pipelines.Initialization.InitializeArgs, UCommerce.Pipelines]], UCommerce"
      type="UCommerce.Pipelines.GenericPipelineTaskAsync`1[[UCommerce.Pipelines.Initialization.InitializeArgs, UCommerce.Pipelines]], UCommerce" >
      <parameters>
        <pipelineTaskName>Initialize.ExecuteUpdateCurrencyExchangeRatesPipelineTask</pipelineTaskName>
        <MaxNumberOfTries>3</MaxNumberOfTries>
      </parameters>
    </component>

  </components>
</configuration>